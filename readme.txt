# Python 邮件客户端

一个基于 Python 开发的命令行邮件客户端，支持多种邮箱服务商，可以实现邮件的收发和附件处理。支持 HTML 格式邮件，提供图形化文件选择界面，并具有加密存储登录信息的功能。

## 功能特点

### 支持的邮箱服务商
- QQ邮箱
- 163邮箱
- Gmail

### 主要功能
1. 邮件收发
   - 支持发送纯文本邮件
   - 支持发送和接收附件
   - 支持查看HTML格式邮件
   - 自动保存接收到的附件
   - 支持选择性下载附件
   
2. 邮件管理
   - 分页显示邮件列表
   - 显示邮件详细内容
   - 支持邮件预览
   - 显示附件大小和类型信息
   
3. 账户管理
   - 支持多个邮箱服务商配置
   - 可保存登录信息
   - 使用加密存储密码
   - 支持记住登录状态

## 安装说明

### 系统要求
- Python 3.6+
- 操作系统：Windows/Linux/MacOS

### 依赖安装（用户可以通过以下命令安装所有依赖：）
pip install -r requirements.txt

### 邮箱设置指南

#### QQ邮箱配置
1. 登录 QQ邮箱网页版
2. 点击"设置" -> "账户"
3. 找到"POP3/IMAP/SMTP服务"并开启
4. 生成授权码（用于登录本程序）

#### 163邮箱配置
1. 登录 163 邮箱
2. 进入设置页面
3. 开启 IMAP/SMTP 服务
4. 获取授权码

#### Gmail配置
1. 登录 Google 账户
2. 开启两步验证
3. 生成应用专用密码
4. 使用应用专用密码登录

## 使用说明

### 首次使用
1. 运行程序：
   python main.py

2. 选择邮箱服务商：
   - 输入 qq 选择QQ邮箱
   - 输入 163 选择163邮箱
   - 输入 gmail 选择Gmail

3. 登录配置：
   - 输入邮箱地址
   - 输入授权码（不是邮箱密码）
   - 选择是否保存登录信息

### 主要功能使用

#### 发送邮件
1. 在主菜单选择 1
2. 按提示输入：
   - 收件人邮箱地址
   - 邮件主题
   - 邮件正文
3. 选择是否添加附件：
   - 输入 y 打开文件选择窗口
   - 可以继续添加多个附件
   - 输入 n 完成发送

#### 接收邮件
1. 在主菜单选择 2
2. 查看邮件列表：
   - 显示最近30封邮件
   - 支持分页浏览（n:下一页，p:上一页）
3. 查看邮件详情：
   - 输入邮件序号查看完整内容
   - 显示发件人、时间、主题等信息
   - 如有附件可选择下载

#### 附件处理
- 所有附件统一保存在 downloads 目录
- 查看邮件时可选择性下载附件
- 支持显示附件大小和类型信息
- 支持多个附件同时处理

### 目录结构

email_client/
├── config/                 # 配置文件目录
│   └── email_config.py    # 邮箱服务商配置
├── models/                # 核心模型
│   └── email_client.py    # 邮件客户端类
├── services/             # 服务层代码
│   ├── email_service.py   # 邮件收发服务
│   └── display_service.py # 显示服务
├── utils/                # 工具类
│   ├── encryption.py     # 加密工具
│   ├── file_utils.py     # 文件处理
│   └── path_utils.py     # 路径处理
├── downloads/            # 附件下载目录
├── config.json          # 用户配置文件
└── main.py             # 程序入口

## 常见问题

### 登录问题
- 问题: 登录失败
- 解决方案: 
  1. 确认使用授权码而不是邮箱密码
  2. 检查邮箱地址是否正确
  3. 确保已开启 SMTP/IMAP 服务
  4. 检查网络连接

### 附件问题
- 问题: 附件下载失败
- 解决方案:
  1. 确保 downloads 目录存在且有写入权限
  2. 检查磁盘空间是否充足
  3. 确认文件名不包含非法字符

### 中文支持
- 默认使用 UTF-8 编码
- 支持 GBK 和 GB2312 编码
- 自动处理中文邮件主题和内容

## 安全说明
- 使用 Fernet 加密算法保护用户信息
- 授权码单独存储并加密
- 建议定期更新授权码
- 请勿分享配置文件和密钥文件

## 贡献指南
欢迎提交 Issue 和 Pull Request 来帮助改进项目。

## 许可证
[MIT License](LICENSE)

## 版本历史
- v1.0.0 (2024-03-xx)
  - 首次发布
  - 支持基本的邮件收发功能
  - 实现附件处理
  - 添加加密存储功能